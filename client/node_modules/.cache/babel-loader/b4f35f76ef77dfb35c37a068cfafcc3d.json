{"ast":null,"code":"export var REGISTRY_FINALIZE_AFTER = 10000;\nexport var REGISTRY_SWEEP_INTERVAL = 10000;\n\nvar TimerBasedFinalizationRegistry =\n/** @class */\nfunction () {\n  function TimerBasedFinalizationRegistry(finalize) {\n    var _this = this;\n\n    Object.defineProperty(this, \"finalize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: finalize\n    });\n    Object.defineProperty(this, \"registrations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, \"sweepTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // Bound so it can be used directly as setTimeout callback.\n\n    Object.defineProperty(this, \"sweep\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (maxAge) {\n        if (maxAge === void 0) {\n          maxAge = REGISTRY_FINALIZE_AFTER;\n        } // cancel timeout so we can force sweep anytime\n\n\n        clearTimeout(_this.sweepTimeout);\n        _this.sweepTimeout = undefined;\n        var now = Date.now();\n\n        _this.registrations.forEach(function (registration, token) {\n          if (now - registration.registeredAt >= maxAge) {\n            _this.finalize(registration.value);\n\n            _this.registrations.delete(token);\n          }\n        });\n\n        if (_this.registrations.size > 0) {\n          _this.scheduleSweep();\n        }\n      }\n    }); // Bound so it can be exported directly as clearTimers test utility.\n\n    Object.defineProperty(this, \"finalizeAllImmediately\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        _this.sweep(0);\n      }\n    });\n  } // Token is actually required with this impl\n\n\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"register\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target, value, token) {\n      this.registrations.set(token, {\n        value: value,\n        registeredAt: Date.now()\n      });\n      this.scheduleSweep();\n    }\n  });\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"unregister\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (token) {\n      this.registrations.delete(token);\n    }\n  });\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"scheduleSweep\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.sweepTimeout === undefined) {\n        this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);\n      }\n    }\n  });\n  return TimerBasedFinalizationRegistry;\n}();\n\nexport { TimerBasedFinalizationRegistry };\nexport var UniversalFinalizationRegistry = typeof FinalizationRegistry !== \"undefined\" ? FinalizationRegistry : TimerBasedFinalizationRegistry;","map":{"version":3,"mappings":"AAQA,OAAO,IAAMA,uBAAuB,GAAG,KAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,KAAhC;;AAEP;AAAA;AAAA;EAII,wCAA6BC,QAA7B,EAAyD;IAAzD;;IAAYC;sBAAA;wBAAA;oBAAA;aAAiBD;IAAjB;IAHJC;sBAAA;wBAAA;oBAAA;aAAkE,IAAIC,GAAJ;IAAlE;IACAD;sBAAA;wBAAA;oBAAA;;IAAA,GAEiD,CAezD;;IACAA;sBAAA;wBAAA;oBAAA;aAAQ,UAACE,MAAD,EAAiC;QAAhC;UAAAA;QAAgC,EACrC;;;QACAC,YAAY,CAACC,KAAI,CAACC,YAAN,CAAZ;QACAD,KAAI,CAACC,YAAL,GAAoBC,SAApB;QAEA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;QACAH,KAAI,CAACK,aAAL,CAAmBC,OAAnB,CAA2B,UAACC,YAAD,EAAeC,KAAf,EAAoB;UAC3C,IAAIL,GAAG,GAAGI,YAAY,CAACE,YAAnB,IAAmCX,MAAvC,EAA+C;YAC3CE,KAAI,CAACL,QAAL,CAAcY,YAAY,CAACG,KAA3B;;YACAV,KAAI,CAACK,aAAL,CAAmBM,MAAnB,CAA0BH,KAA1B;UACH;QACJ,CALD;;QAOA,IAAIR,KAAI,CAACK,aAAL,CAAmBO,IAAnB,GAA0B,CAA9B,EAAiC;UAC7BZ,KAAI,CAACa,aAAL;QACH;MACJ;IAhBD,GAhByD,CAkCzD;;IACAjB;sBAAA;wBAAA;oBAAA;aAAyB;QACrBI,KAAI,CAACc,KAAL,CAAW,CAAX;MACH;IAFD;EAnC6D,CAJjE,CAMI;;;;;;;WACA,UAASC,MAAT,EAAyBL,KAAzB,EAAmCF,KAAnC,EAAiD;MAC7C,KAAKH,aAAL,CAAmBW,GAAnB,CAAuBR,KAAvB,EAA8B;QAC1BE,KAAK,OADqB;QAE1BD,YAAY,EAAEL,IAAI,CAACD,GAAL;MAFY,CAA9B;MAIA,KAAKU,aAAL;IACH;;;;;;WAED,UAAWL,KAAX,EAAyB;MACrB,KAAKH,aAAL,CAAmBM,MAAnB,CAA0BH,KAA1B;IACH;;;;;;WA0BD;MACI,IAAI,KAAKP,YAAL,KAAsBC,SAA1B,EAAqC;QACjC,KAAKD,YAAL,GAAoBgB,UAAU,CAAC,KAAKH,KAAN,EAAapB,uBAAb,CAA9B;MACH;IACJ;;EACL;AAAC,CAhDD;;;AAkDA,OAAO,IAAMwB,6BAA6B,GACtC,OAAOC,oBAAP,KAAgC,WAAhC,GACMA,oBADN,GAEMC,8BAHH","names":["REGISTRY_FINALIZE_AFTER","REGISTRY_SWEEP_INTERVAL","finalize","Object","Map","maxAge","clearTimeout","_this","sweepTimeout","undefined","now","Date","registrations","forEach","registration","token","registeredAt","value","delete","size","scheduleSweep","sweep","target","set","setTimeout","UniversalFinalizationRegistry","FinalizationRegistry","TimerBasedFinalizationRegistry"],"sources":["C:\\Users\\Mohamed\\Desktop\\courses_school\\pro_english\\client\\node_modules\\mobx-react-lite\\src\\utils\\UniversalFinalizationRegistry.ts"],"sourcesContent":["export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n"]},"metadata":{},"sourceType":"module"}