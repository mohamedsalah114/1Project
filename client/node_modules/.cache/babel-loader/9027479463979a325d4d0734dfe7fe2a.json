{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport { jwtDecode } from 'jwt-decode';\nexport const registration = async (email, password, nickname) => {\n  const {\n    data\n  } = await $host.post('api/user/registration', {\n    email,\n    password,\n    nickname\n  });\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', data.token);\n  const token = jwt_decode(data.token);\n  localStorage.setItem('userId', token.id);\n  console.log(localStorage.getItem('userId'));\n  return token;\n};\nexport const fetchName = async userId => {\n  if (userId != null) {\n    const {\n      data\n    } = await $host.get('api/user/name/' + userId);\n    return data;\n  } else {\n    return null;\n  }\n};\nexport const check = async () => {\n  const {\n    data\n  } = await $authHost.get('api/user/auth');\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","registration","email","password","nickname","data","post","localStorage","setItem","token","jwt_decode","login","id","console","log","getItem","fetchName","userId","get","check"],"sources":["C:/Users/Mohamed/Desktop/courses_school/pro_english/client/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport const registration = async (email, password, nickname) => {\r\n    const { data } = await $host.post('api/user/registration', { email, password, nickname })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $host.post('api/user/login', { email, password })\r\n    localStorage.setItem('token', data.token)\r\n    const token = jwt_decode(data.token)\r\n    localStorage.setItem('userId', token.id)\r\n    console.log(localStorage.getItem('userId'))\r\n    return token\r\n}\r\n\r\nexport const fetchName = async (userId) => {\r\n    if (userId != null) {\r\n        const { data } = await $host.get('api/user/name/' + userId)\r\n        return data\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,SAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,QAAxB,KAAqC;EAC7D,MAAM;IAAEC;EAAF,IAAW,MAAMN,KAAK,CAACO,IAAN,CAAW,uBAAX,EAAoC;IAAEJ,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAApC,CAAvB;EACAG,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;EACA,OAAOC,UAAU,CAACL,IAAI,CAACI,KAAN,CAAjB;AACH,CAJM;AAMP,OAAO,MAAME,KAAK,GAAG,OAAOT,KAAP,EAAcC,QAAd,KAA2B;EAC5C,MAAM;IAAEE;EAAF,IAAW,MAAMN,KAAK,CAACO,IAAN,CAAW,gBAAX,EAA6B;IAAEJ,KAAF;IAASC;EAAT,CAA7B,CAAvB;EACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;EACA,MAAMA,KAAK,GAAGC,UAAU,CAACL,IAAI,CAACI,KAAN,CAAxB;EACAF,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,KAAK,CAACG,EAArC;EACAC,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACQ,OAAb,CAAqB,QAArB,CAAZ;EACA,OAAON,KAAP;AACH,CAPM;AASP,OAAO,MAAMO,SAAS,GAAG,MAAOC,MAAP,IAAkB;EACvC,IAAIA,MAAM,IAAI,IAAd,EAAoB;IAChB,MAAM;MAAEZ;IAAF,IAAW,MAAMN,KAAK,CAACmB,GAAN,CAAU,mBAAmBD,MAA7B,CAAvB;IACA,OAAOZ,IAAP;EACH,CAHD,MAGO;IACH,OAAO,IAAP;EACH;AACJ,CAPM;AASP,OAAO,MAAMc,KAAK,GAAG,YAAY;EAC7B,MAAM;IAAEd;EAAF,IAAW,MAAMP,SAAS,CAACoB,GAAV,CAAc,eAAd,CAAvB;EACAX,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;EACA,OAAOC,UAAU,CAACL,IAAI,CAACI,KAAN,CAAjB;AACH,CAJM"},"metadata":{},"sourceType":"module"}