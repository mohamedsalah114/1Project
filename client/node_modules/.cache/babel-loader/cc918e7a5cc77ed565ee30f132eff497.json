{"ast":null,"code":"import { useDeprecated } from \"./utils/utils\";\nimport { observable, runInAction } from \"mobx\";\nimport { useState } from \"react\";\nexport function useAsObservableSource(current) {\n  if (\"production\" !== process.env.NODE_ENV) useDeprecated(\"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"); // We're deliberately not using idiomatic destructuring for the hook here.\n  // Accessing the state value as an array element prevents TypeScript from generating unnecessary helpers in the resulting code.\n  // For further details, please refer to mobxjs/mobx#3842.\n\n  var res = useState(function () {\n    return observable(current, {}, {\n      deep: false\n    });\n  })[0];\n  runInAction(function () {\n    Object.assign(res, current);\n  });\n  return res;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,MAAxC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAM,SAAUC,qBAAV,CAAwDC,OAAxD,EAAwE;EAC1E,IAAI,iBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAAjC,EACIR,aAAa,CACT,4OADS,CAAb,CAFsE,CAK1E;EACA;EACA;;EACA,IAAMS,GAAG,GAAGN,QAAQ,CAAC;IAAM,iBAAU,CAACE,OAAD,EAAU,EAAV,EAAc;MAAEK,IAAI,EAAE;IAAR,CAAd,CAAV;EAAwC,CAA/C,CAAR,CAAyD,CAAzD,CAAZ;EACAR,WAAW,CAAC;IACRS,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBJ,OAAnB;EACH,CAFU,CAAX;EAGA,OAAOI,GAAP;AACH","names":["useDeprecated","observable","runInAction","useState","useAsObservableSource","current","process","env","NODE_ENV","res","deep","Object","assign"],"sources":["C:\\Users\\Mohamed\\Desktop\\courses_school\\pro_english\\client\\node_modules\\mobx-react-lite\\src\\useAsObservableSource.ts"],"sourcesContent":["import { useDeprecated } from \"./utils/utils\"\nimport { observable, runInAction } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\n        )\n    // We're deliberately not using idiomatic destructuring for the hook here.\n    // Accessing the state value as an array element prevents TypeScript from generating unnecessary helpers in the resulting code.\n    // For further details, please refer to mobxjs/mobx#3842.\n    const res = useState(() => observable(current, {}, { deep: false }))[0]\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n"]},"metadata":{},"sourceType":"module"}