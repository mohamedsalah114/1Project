{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const fetchCategory = async () => {\n  const {\n    data\n  } = await $host.get('api/category');\n  return data;\n};\nexport const fetchNationality = async () => {\n  const {\n    data\n  } = await $host.get('api/nationality');\n  return data;\n};\nexport const fetchSpecialGroup = async () => {\n  const {\n    data\n  } = await $host.get('api/specialgroup');\n  return data;\n};\nexport const fetchMeaSure = async () => {\n  const {\n    data\n  } = await $host.get('api/measure');\n  return data;\n};\nexport const fetchIngridients = async () => {\n  const {\n    data\n  } = await $host.get('api/ingridient');\n  return data;\n};\nexport const fetchOneDish = async id => {\n  const {\n    data\n  } = await $host.get('api/dish/' + id);\n  return data;\n};\nexport const fetchOneDishCompound = async id => {\n  const {\n    data\n  } = await $host.get('api/compound/' + id);\n  return data;\n};\nexport const fetchComments = async id => {\n  const {\n    data\n  } = await $host.get('api/comments/' + id);\n  return data;\n};\nexport const postComment = async comment => {\n  const {\n    data\n  } = await $authHost.get('api/comments', comment);\n  return data;\n};\nexport const fetchDishes = async (category_id, nationality_id, special_group_id, ingridientsArray, page, limit) => {\n  const {\n    data\n  } = await $host.get('api/dish', {\n    params: {\n      category_id,\n      nationality_id,\n      special_group_id,\n      ingridientsArray,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const createDish = async dish => {\n  const {\n    data\n  } = await $host.post('api/dish', dish);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","fetchCategory","data","get","fetchNationality","fetchSpecialGroup","fetchMeaSure","fetchIngridients","fetchOneDish","id","fetchOneDishCompound","fetchComments","postComment","comment","fetchDishes","category_id","nationality_id","special_group_id","ingridientsArray","page","limit","params","createDish","dish","post"],"sources":["C:/Users/Mohamed/Desktop/courses_school/pro_english/client/src/http/courseAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\n\r\nexport const fetchCategory = async () => {\r\n    const {data} = await $host.get('api/category')\r\n    return data\r\n}\r\n\r\nexport const fetchNationality = async () => {\r\n    const {data} = await $host.get('api/nationality')\r\n    return data\r\n}\r\n\r\nexport const fetchSpecialGroup = async () => {\r\n    const {data} = await $host.get('api/specialgroup')\r\n    return data\r\n}\r\n\r\nexport const fetchMeaSure = async () => {\r\n    const {data} = await $host.get('api/measure')\r\n    return data\r\n}\r\n\r\nexport const fetchIngridients = async () => {\r\n    const {data} = await $host.get('api/ingridient')\r\n    return data\r\n}\r\n\r\nexport const fetchOneDish = async (id) => {\r\n    const {data} = await $host.get('api/dish/' + id)\r\n    return data\r\n}\r\n\r\nexport const fetchOneDishCompound = async (id) => {\r\n    const {data} = await $host.get('api/compound/' + id)\r\n    return data\r\n}\r\n\r\nexport const fetchComments = async (id) => {\r\n    const {data} = await $host.get('api/comments/' + id)\r\n    return data\r\n}\r\n\r\nexport const postComment = async (comment) => {\r\n    const {data} = await $authHost.get('api/comments', comment)\r\n    return data\r\n}\r\n\r\nexport const fetchDishes = async (category_id, nationality_id, special_group_id, ingridientsArray, page, limit) => {\r\n    const {data} = await $host.get('api/dish', {\r\n            params: {\r\n                category_id,\r\n                nationality_id,\r\n                special_group_id,\r\n                ingridientsArray,\r\n                page,\r\n                limit\r\n            }\r\n        }\r\n    )\r\n    return data\r\n}\r\n\r\nexport const createDish = async (dish) => {\r\n    const {data} = await $host.post('api/dish', dish)\r\n    return data\r\n}\r\n\r\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,SAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAY;EACrC,MAAM;IAACC;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,cAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAME,gBAAgB,GAAG,YAAY;EACxC,MAAM;IAACF;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,iBAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAMG,iBAAiB,GAAG,YAAY;EACzC,MAAM;IAACH;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,kBAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAMI,YAAY,GAAG,YAAY;EACpC,MAAM;IAACJ;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,aAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAMK,gBAAgB,GAAG,YAAY;EACxC,MAAM;IAACL;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,gBAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAMM,YAAY,GAAG,MAAOC,EAAP,IAAc;EACtC,MAAM;IAACP;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,cAAcM,EAAxB,CAArB;EACA,OAAOP,IAAP;AACH,CAHM;AAKP,OAAO,MAAMQ,oBAAoB,GAAG,MAAOD,EAAP,IAAc;EAC9C,MAAM;IAACP;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,kBAAkBM,EAA5B,CAArB;EACA,OAAOP,IAAP;AACH,CAHM;AAKP,OAAO,MAAMS,aAAa,GAAG,MAAOF,EAAP,IAAc;EACvC,MAAM;IAACP;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,kBAAkBM,EAA5B,CAArB;EACA,OAAOP,IAAP;AACH,CAHM;AAKP,OAAO,MAAMU,WAAW,GAAG,MAAOC,OAAP,IAAmB;EAC1C,MAAM;IAACX;EAAD,IAAS,MAAMH,SAAS,CAACI,GAAV,CAAc,cAAd,EAA8BU,OAA9B,CAArB;EACA,OAAOX,IAAP;AACH,CAHM;AAKP,OAAO,MAAMY,WAAW,GAAG,OAAOC,WAAP,EAAoBC,cAApB,EAAoCC,gBAApC,EAAsDC,gBAAtD,EAAwEC,IAAxE,EAA8EC,KAA9E,KAAwF;EAC/G,MAAM;IAAClB;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,UAAV,EAAsB;IACnCkB,MAAM,EAAE;MACJN,WADI;MAEJC,cAFI;MAGJC,gBAHI;MAIJC,gBAJI;MAKJC,IALI;MAMJC;IANI;EAD2B,CAAtB,CAArB;EAWA,OAAOlB,IAAP;AACH,CAbM;AAeP,OAAO,MAAMoB,UAAU,GAAG,MAAOC,IAAP,IAAgB;EACtC,MAAM;IAACrB;EAAD,IAAS,MAAMF,KAAK,CAACwB,IAAN,CAAW,UAAX,EAAuBD,IAAvB,CAArB;EACA,OAAOrB,IAAP;AACH,CAHM"},"metadata":{},"sourceType":"module"}